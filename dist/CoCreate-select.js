(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["CoCreateSelect"] = factory();
	else
		root["CoCreate"] = root["CoCreate"] || {}, root["CoCreate"]["CoCreateSelect"] = factory();
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./CoCreate-components/CoCreate-select/src/CoCreate-select.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./CoCreate-components/CoCreate-select/src/CoCreate-select.js":
/*!********************************************************************!*\
  !*** ./CoCreate-components/CoCreate-select/src/CoCreate-select.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var CoCreateSelect = {\n  init: function init() {\n    this.initElement(); // this.__initEvents()\n  },\n  initElement: function initElement(container) {\n    var mainContainer = container || document;\n\n    if (!mainContainer.querySelectorAll) {\n      return;\n    }\n\n    var containerList = mainContainer.querySelectorAll('cocreate-select, div.select--field');\n\n    for (var i = 0; i < containerList.length; i++) {\n      var selectContainer = containerList[i];\n\n      this.__initSelect(selectContainer);\n    }\n  },\n  __initEvents: function __initEvents() {\n    var self = this;\n    document.addEventListener('dndsuccess', function (e) {\n      var _e$detail = e.detail,\n          dropedEl = _e$detail.dropedEl,\n          dragedEl = _e$detail.dragedEl;\n\n      if (typeof dropedEl.tagName != 'undefined' && dropedEl.tagName.toLowerCase() == 'cocreate-select' || dropedEl.classList.contains('select--field')) {\n        self.save(dropedEl);\n\n        self.__fireSelectedEvent(dropedEl);\n      }\n    });\n  },\n  __initSelect: function __initSelect(selectContainer) {\n    if (CoCreateObserver.getInitialized(selectContainer, \"cocreate-select\")) {\n      return;\n    }\n\n    CoCreateObserver.setInitialized(selectContainer, \"cocreate-select\");\n    var input = selectContainer.querySelector('input');\n    var ul_selector = selectContainer.querySelector('ul.selectable--list');\n    var self = this;\n\n    if (input) {\n      input.addEventListener('keydown', function (e) {\n        var keyCode = e.keyCode;\n\n        if (keyCode == 13) {\n          e.preventDefault();\n        }\n\n        if (keyCode == 13 && this.value.length > 0) {\n          self.__selectValue(this.value, selectContainer);\n\n          self.save(selectContainer);\n\n          self.__fireSelectedEvent(selectContainer);\n\n          this.value = '';\n        } else if (keyCode == 8 && !this.value.length) {\n          var selectedItems = selectContainer.querySelectorAll('[selected]');\n\n          if (selectedItems.length > 0) {\n            selectedItems[selectedItems.length - 1].remove();\n            self.save(selectContainer);\n\n            self.__fireSelectedEvent(selectContainer);\n          }\n        }\n      });\n    }\n\n    document.addEventListener('click', function (event) {\n      var isClickInside = selectContainer.contains(event.target);\n\n      if (!isClickInside) {\n        self.__closeDropDown(selectContainer);\n      }\n    });\n    ul_selector.addEventListener('click', function (e) {\n      if (!e.target.matches('li')) {\n        var li = e.target;\n\n        while (typeof li.tagName != 'undefined' && li.tagName.toLowerCase() != 'li') {\n          li = li.parentNode;\n        }\n\n        if (li.classList && li.classList.contains('selectable')) {\n          // check if data exist\n          var value = li.getAttribute('value');\n          var selectValue = self.getValue(selectContainer);\n          if (value == selectValue || selectValue.indexOf(value) > -1) return; /// here emit event\n\n          self.__selectItem(li, selectContainer);\n\n          self.save(selectContainer);\n\n          self.__fireSelectedEvent(selectContainer);\n        }\n      }\n    });\n    selectContainer.addEventListener('click', function (e) {\n      if (e.target.matches('.remove')) {\n        e.target.parentNode.remove();\n        self.save(selectContainer);\n\n        self.__fireSelectedEvent(selectContainer);\n\n        return;\n      }\n\n      if (!ul_selector.classList.contains('open')) {\n        self.__openDropDown(selectContainer);\n      }\n\n      var input = selectContainer.querySelector('input');\n\n      if (input) {\n        input.focus();\n      }\n    }, true);\n  },\n  __openDropDown: function __openDropDown(selectContainer) {\n    var focus = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n    if (focus) {\n      var input = selectContainer.querySelector('input');\n      var ul_selector = selectContainer.querySelector('ul.selectable--list');\n\n      if (input) {\n        input.classList.add('open');\n        input.focus();\n      }\n\n      if (ul_selector && ul_selector) {\n        ul_selector.classList.add('open');\n      }\n\n      selectContainer.dispatchEvent(new CustomEvent('CoCreateSelect-open'));\n    }\n  },\n  __closeDropDown: function __closeDropDown(selectContainer) {\n    var input = selectContainer.querySelector('input');\n    var ul_selector = selectContainer.querySelector('ul.selectable--list');\n\n    if (input && input.classList.contains('open')) {\n      input.classList.remove('open');\n    }\n\n    if (ul_selector && ul_selector.classList.contains('open')) {\n      ul_selector.classList.remove('open');\n      selectContainer.dispatchEvent(new CustomEvent('CoCreateSelect-close'));\n    }\n  },\n  setValue: function setValue(data) {\n    var self = this;\n    var selectContainers = document.querySelectorAll('cocreate-select,.select--field');\n    selectContainers.forEach(function (selectEl) {\n      var collection = selectEl.getAttribute('data-collection') || 'module_activity';\n      var id = selectEl.getAttribute('data-document_id');\n      var name = selectEl.getAttribute('name');\n\n      if (data['collection'] == collection && data['document_id'] == id && name) {\n        self.__renderValue(selectEl, data['data'][name]);\n      }\n    });\n  },\n  renderValue: function renderValue(target, value) {\n    this.__renderValue(target, value);\n  },\n  __renderValue: function __renderValue(selectContainer, values) {\n    if (!values) {\n      return;\n    }\n\n    var selectedItems = selectContainer.querySelectorAll('[selected]');\n    selectedItems.forEach(function (item) {\n      return item.remove();\n    });\n    var ul_selector = selectContainer.querySelector('ul.selectable--list');\n\n    if (values && typeof values === 'string') {\n      values = [values];\n    }\n\n    for (var i = 0; i < values.length; i++) {\n      var selectedItem = ul_selector.querySelector(\"li[value='\" + values[i] + \"']\");\n\n      if (selectedItem) {\n        this.__selectItem(selectedItem, selectContainer, false);\n      } else {\n        this.__selectValue(values[i], selectContainer, false);\n      }\n    }\n\n    try {\n      if (CoCreateFloatLabel) {\n        CoCreateFloatLabel.update(selectContainer, values && values.length > 0);\n      }\n    } catch (err) {}\n  },\n  __selectValue: function __selectValue(value, selectContainer) {\n    var currentValue = this.getValue(selectContainer);\n    if (currentValue == value || currentValue.indexOf(value) > -1) return;\n    var searchInput = selectContainer.querySelector('input');\n    var ul_selector = selectContainer.querySelector('ul.selectable--list');\n    var span = document.createElement('span');\n    span.innerHTML = 'x';\n    span.classList.add('remove');\n    var li = document.createElement('li');\n    li.setAttribute('value', value); // li.setAttribute('data-value', value);\n\n    li.innerHTML = value;\n    li.setAttribute('selected', \"\"); // li.classList.add('selected');\n\n    li.classList.remove('selectable');\n    li.appendChild(span);\n    selectContainer.insertBefore(li, searchInput ? searchInput : ul_selector);\n  },\n  __selectItem: function __selectItem(li, selectContainer) {\n    var focus = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    var type = selectContainer.hasAttribute('multiple') ? 'multiple' : 'single';\n    var searchInput = selectContainer.querySelector('input');\n    var ul_selector = selectContainer.querySelector('ul.selectable--list');\n\n    if (type == 'single') {\n      var selectedItems = selectContainer.querySelectorAll('[selected]');\n      selectedItems.forEach(function (item) {\n        return item.remove();\n      });\n\n      if (searchInput) {\n        searchInput.value = '';\n      }\n    }\n\n    var span = document.createElement('span');\n    span.innerHTML = 'x';\n    span.classList.add('remove');\n    var selectedItem = li.cloneNode(true); // selectedItem.classList.add('selected');\n\n    selectedItem.setAttribute(\"selected\", \"\");\n    selectedItem.classList.remove('selectable');\n    selectedItem.appendChild(span);\n    selectContainer.insertBefore(selectedItem, searchInput ? searchInput : ul_selector);\n\n    if (type == 'single') {\n      this.__closeDropDown(selectContainer);\n    }\n  },\n  getValue: function getValue(node) {\n    var type = node.hasAttribute('multiple') ? 'multiple' : 'single';\n    var selectedItems = node.querySelectorAll('[selected]');\n    var value = [];\n\n    if (selectedItems.length > 0) {\n      selectedItems.forEach(function (item) {\n        return value.push(item.getAttribute('value'));\n      });\n    }\n\n    value = type === 'multiple' ? value : value[0] || '';\n    return value;\n  },\n  save: function save(selectEl) {\n    if (!selectEl) {\n      return;\n    }\n\n    var event = new CustomEvent('CoCreateSelect-save', {\n      detail: {\n        element: selectEl\n      }\n    });\n    document.dispatchEvent(event);\n  },\n  __fireSelectedEvent: function __fireSelectedEvent(element) {\n    element.dispatchEvent(new CustomEvent('selectedValue'));\n    element.dispatchEvent(new CustomEvent('input', {\n      bubbles: true\n    }));\n    var value = this.getValue(element);\n    document.dispatchEvent(new CustomEvent('CoCreate-selected', {\n      detail: {\n        element: element,\n        value: value\n      }\n    }));\n  }\n}; // CoCreateSelect.init();\n// CoCreateInit.register('CoCreateSelect', CoCreateSelect, CoCreateSelect.initElement);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./CoCreate-components/CoCreate-select/src/CoCreate-select.js\n");

/***/ })

/******/ })["default"];
});